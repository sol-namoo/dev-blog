{"version":3,"file":"component---src-pages-index-js-b68abadbe240f9c2e4b0.js","mappings":"iOAaA,EAToB,SAAHA,GAAmB,IAAbC,EAAKD,EAALC,MACrB,OACEC,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,MAAIC,UAAU,sBAAqB,gBACnCD,EAAAA,cAACE,EAAAA,EAAc,CAACH,MAAOA,EAAOI,gBAAgB,EAAOC,QAAQ,KAGnE,E,QCeA,MAhBA,SAAiBN,GAAY,IAATO,EAAIP,EAAJO,KACZN,EAAQM,EAAKC,kBAAkBC,MAAMC,KAAI,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAI,OAAO,IAAIC,EAAAA,EAAKD,EAAK,IAC3EE,EAA6BP,EAAKQ,KAAKC,aAEjCC,GAFQH,EAANI,OAAgBJ,EAARK,SACA,CAAI,OAAKC,QAAAC,EAAAA,EAAAA,GCbQ,SAACpB,GAClC,IAAMqB,EAAc,IAAIC,IAExB,OADAtB,EAAMuB,SAAQ,SAAAxB,GAAa,OAAAA,EAAVyB,WAA4BD,SAAQ,SAACE,GAAQ,OAAKJ,EAAYK,IAAID,EAAS,GAAC,KACtFL,EAAAA,EAAAA,GAAIC,GAAaM,MAAK,SAACC,EAAGC,GAC/B,MAAU,aAAND,GAA0B,EACpB,aAANC,EAAyB,EACtB,CACT,GACF,CDKgCC,CAAoB9B,MACd+B,WAAU,SAACN,GAAQ,MAAkB,aAAbA,CAAuB,IACnFO,GAAgCC,EAAAA,EAAAA,WAA+B,IAAtBjB,EAA0B,EAAIA,GAAtDkB,GAAFF,EAAA,GAAaA,EAAA,IAG5B,OAFyBG,EAAAA,EAAAA,cAAY,SAACC,EAAGC,GAAK,OAAKH,EAAYG,EAAM,GAAE,IAGrEpC,EAAAA,cAACqC,EAAAA,EAAM,CAACC,YAAU,GAChBtC,EAAAA,cAACuC,EAAAA,EAAG,CAACC,MAAM,SACXxC,EAAAA,cAACyC,EAAW,CAAC1C,MAAOA,IAG1B,C","sources":["webpack://zoomkoding.com/./src/components/post-tabs/latest-posts.js","webpack://zoomkoding.com/./src/pages/index.js","webpack://zoomkoding.com/./src/utils/helpers.js"],"sourcesContent":["import React from 'react';\nimport PostCardColumn from '../post-card-column';\nimport './style.scss';\n\nconst LatestPosts = ({ posts }) => {\n  return (\n    <div className=\"latest-posts\">\n      <h2 className=\"latest-posts-title\">Latest Posts</h2>\n      <PostCardColumn posts={posts} showMoreButton={false} moreUrl=\"\" />\n    </div>\n  );\n};\n\nexport default LatestPosts;\n","import React, { useCallback, useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport Post from '../models/post';\nimport LatestPosts from '../components/post-tabs/latest-posts';\n\nimport { getUniqueCategories } from '../utils/helpers';\nimport PostTabs from '../components/post-tabs';\n\nfunction HomePage({ data }) {\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new Post(node));\n  const { author, language } = data.site.siteMetadata;\n  const categories = ['All', ...getUniqueCategories(posts)];\n  const featuredTabIndex = categories.findIndex((category) => category === 'featured');\n  const [tabIndex, setTabIndex] = useState(featuredTabIndex === -1 ? 0 : featuredTabIndex);\n  const onTabIndexChange = useCallback((e, value) => setTabIndex(value), []);\n\n  return (\n    <Layout isHomePage>\n      <Seo title=\"Home\" />\n      <LatestPosts posts={posts} />\n    </Layout>\n  );\n}\n\nexport default HomePage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }, limit: 3) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 500, truncate: true)\n          frontmatter {\n            categories\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    site {\n      siteMetadata {\n        language\n        author {\n          name\n          bio {\n            role\n            description\n            thumbnail\n          }\n          social {\n            github\n            linkedIn\n            email\n          }\n        }\n      }\n    }\n  }\n`;\n","export const getUniqueCategories = (posts) => {\n  const categorySet = new Set();\n  posts.forEach(({ categories }) => categories.forEach((category) => categorySet.add(category)));\n  return [...categorySet].sort((a, b) => {\n    if (a === 'featured') return -1;\n    if (b === 'featured') return 1;\n    return 0;\n  });\n};\n"],"names":["_ref","posts","React","className","PostCardColumn","showMoreButton","moreUrl","data","allMarkdownRemark","edges","map","_ref2","node","Post","_data$site$siteMetada","site","siteMetadata","featuredTabIndex","author","language","concat","_toConsumableArray","categorySet","Set","forEach","categories","category","add","sort","a","b","getUniqueCategories","findIndex","_useState","useState","setTabIndex","useCallback","e","value","Layout","isHomePage","Seo","title","LatestPosts"],"sourceRoot":""}